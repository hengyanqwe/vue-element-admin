Index: src/views/table/post-table.vue
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/views/table/post-table.vue	(date 1598577633459)
+++ src/views/table/post-table.vue	(date 1598577633459)
@@ -0,0 +1,495 @@
+<template>
+  <div class="app-container">
+    <div class="filter-container">
+      <el-input
+        v-model="listQuery.title"
+        placeholder="Title"
+        style="width: 200px;"
+        class="filter-item"
+        @keyup.enter.native="handleFilter"
+      />
+      <el-select v-model="listQuery.importance" placeholder="Imp" clearable style="width: 90px" class="filter-item">
+        <el-option v-for="item in importanceOptions" :key="item" :label="item" :value="item"/>
+      </el-select>
+      <el-select v-model="listQuery.type" placeholder="Type" clearable class="filter-item" style="width: 130px">
+        <el-option
+          v-for="item in calendarTypeOptions"
+          :key="item.key"
+          :label="item.display_name+'('+item.key+')'"
+          :value="item.key"
+        />
+      </el-select>
+      <el-select v-model="listQuery.sort" style="width: 140px" class="filter-item" @change="handleFilter">
+        <el-option v-for="item in sortOptions" :key="item.key" :label="item.label" :value="item.key"/>
+      </el-select>
+      <el-button v-waves class="filter-item" type="primary" icon="el-icon-search" @click="handleFilter">
+        Search
+      </el-button>
+      <el-button
+        class="filter-item"
+        style="margin-left: 10px;"
+        type="primary"
+        icon="el-icon-edit"
+        @click="handleCreate"
+      >
+        Add
+      </el-button>
+      <el-button
+        v-waves
+        :loading="downloadLoading"
+        class="filter-item"
+        type="primary"
+        icon="el-icon-download"
+        @click="handleDownload"
+      >
+        Export
+      </el-button>
+      <el-checkbox v-model="showReviewer" class="filter-item" style="margin-left:15px;" @change="tableKey=tableKey+1">
+        reviewer
+      </el-checkbox>
+    </div>
+
+    <el-table
+      :key="tableKey"
+      v-loading="listLoading"
+      :data="list"
+      border
+      fit
+      highlight-current-row
+      style="width: 100%;"
+      @sort-change="sortChange"
+    >
+      <el-table-column label="staffID" width="150px" align="center" sortable="custom" :class-name="getSortClass('id')">
+        <template slot-scope="{row}">
+          <span>{{ row.staffid }}</span>
+        </template>
+      </el-table-column>
+      <el-table-column label="职位" prop="postId" align="center" width="80">
+        <template slot-scope="{row}">
+          <span>{{ row.postName }}</span>
+        </template>
+      </el-table-column>
+      <el-table-column label="员工姓名" min-width="150px">
+        <template slot-scope="{row}">
+          <span>{{ row.staffName }}</span>
+        </template>
+      </el-table-column>
+      <el-table-column label="身份证号" min-width="150px">
+        <template slot-scope="{row}">
+          <span>{{ row.idcard }}</span>
+        </template>
+      </el-table-column>
+      <el-table-column label="工作状态" class-name="status-col" width="100">
+        <template slot-scope="{row}">
+          <el-tag :type="row.state | statusFilter">
+            {{ row.state==1?'在职':'离职' }}
+          </el-tag>
+        </template>
+      </el-table-column>
+      <el-table-column label="Actions" align="center" width="330" class-name="small-padding fixed-width">
+        <template slot-scope="{row,$index}">
+          <el-button type="primary" size="mini" @click="handleUpdate(row)">
+            修改信息
+          </el-button>
+          <el-button
+            v-if="row.state=='1'"
+            size="mini"
+            type="success"
+            @click="handleModifyStatus(row,'2')"
+          >
+            离职
+          </el-button>
+          <el-button v-if="row.state=='2'" size="mini" @click="handleModifyStatus(row,'1')">
+            在职
+          </el-button>
+        </template>
+      </el-table-column>
+    </el-table>
+    <pagination
+      v-show="total>0"
+      :total="total"
+      :page.sync="listQuery.page"
+      :limit.sync="listQuery.limit"
+      @pagination="getList"
+    />
+    <el-dialog :title="textMap[dialogStatus]" :visible.sync="dialogFormVisible">
+      <el-form
+        ref="dataForm"
+        :rules="rules"
+        :model="temp"
+        label-position="left"
+        label-width="90px"
+        style="width: 400px; margin-left:50px;"
+      >
+        <el-form-item label="职能" prop="postId">
+          <el-select v-model="temp.postId" class="filter-item" placeholder="Please select">
+            <el-option
+              v-for="item in calendarTypeOptions"
+              :key="item.postid"
+              :label="item.postname"
+              :value="item.postid"
+            />
+          </el-select>
+        </el-form-item>
+        <el-form-item label="员工" prop="staffName">
+          <el-input v-model="temp.staffName" :autosize="{ minRows: 2, maxRows: 4}" placeholder="Please input"/>
+        </el-form-item>
+        <el-form-item label="身份证号" prop="idcard">
+          <el-input v-model="temp.idcard" placeholder="Please input"/>
+        </el-form-item>
+      </el-form>
+      <div slot="footer" class="dialog-footer">
+        <el-button @click="dialogFormVisible = false">
+          Cancel
+        </el-button>
+        <el-button type="primary" @click="dialogStatus==='create'?createData():updateData()">
+          Confirm
+        </el-button>
+      </div>
+    </el-dialog>
+  </div>
+</template>
+
+<script>
+  import {querypost, fetchList, fetchPv, createArticle, updateArticle} from '@/api/article'
+  import waves from '@/directive/waves' // waves directive
+  import {parseTime} from '@/utils'
+  import Pagination from '@/components/Pagination'
+  import {adminlogin} from "../../api/article"; // secondary package based on el-pagination
+
+  const calendarTypeOptions = [{'postid': 1, 'postname': 'ls'}]
+
+  // arr to obj, such as { CN : "China", US : "USA" }
+  const calendarTypeKeyValue = calendarTypeOptions.reduce((acc, cur) => {
+    acc[cur.postid] = cur.postname
+    return acc
+  }, {})
+
+  export default {
+    name: 'ComplexTable',
+    components: {Pagination},
+    directives: {waves},
+    filters: {
+      statusFilter(status) {
+        const statusMap = {
+          published: 'success',
+          draft: 'info',
+          deleted: 'danger'
+        }
+        return statusMap[status]
+      },
+      typeFilter(type) {
+        return calendarTypeKeyValue[type]
+      }
+    },
+    data() {
+      return {
+        tableKey: 0,
+        list: null,
+        total: 0,
+        listLoading: true,
+        listQuery: {
+          page: 1,
+          limit: 20,
+          importance: undefined,
+          title: undefined,
+          title2: undefined,
+          idcard: undefined,
+          staffName: undefined,
+          postId: undefined,
+          sort: '+staffid'
+        },
+        importanceOptions: [1, 2, 3],
+        calendarTypeOptions,
+        sortOptions: [{label: 'ID Ascending', key: '+id'}, {label: 'ID Descending', key: '-id'}],
+        statusOptions: ['published', 'draft', 'deleted'],
+        showReviewer: false,
+        temp: {
+          staffid: undefined,
+          postId: undefined,
+          staffName: '',
+          idcard: '',
+          type: undefined,
+          state: 'published'
+        },
+        staff: {
+          staffid: undefined,
+          postId: undefined,
+          staffName: '',
+          idcard: '',
+          type: undefined,
+          state: 'published'
+        },
+        dialogFormVisible: false,
+        dialogStatus: '',
+        textMap: {
+          update: 'Edit',
+          create: 'Create'
+        },
+        dialogPvVisible: false,
+        pvData: [],
+        rules: {
+          postId: [{required: true, message: '职位是需要填写的', trigger: 'change'}],
+          timestamp: [{type: 'date', required: true, message: 'timestamp is required', trigger: 'change'}],
+          staffName: [{required: true, message: '员工是需要填写的', trigger: 'blur'}],
+          idcard: [{required: true, message: '身份证是需要填写的', trigger: 'blur'}]
+        },
+        downloadLoading: false
+      }
+    },
+    created(url, config) {
+      let http = this.$axios.create({
+        // 访问的根路径
+        baseURL: 'http://192.168.43.27:8080/',
+        // 请求超时时间
+        timeout: 5000,
+        // 是否携带凭证
+        withCredentials: true,
+        responseType: "json"
+      })
+      // 添加请求拦截器
+      http.interceptors.request.use(function (config) {
+        // 在发送请求之前做些什么
+        return config;
+      }, function (error) {
+        // 对请求错误做些什么
+        return Promise.reject(error);
+      });
+
+// 添加响应拦截器
+      http.interceptors.response.use(function (response) {
+        // 对响应数据做点什么
+        return response.data;
+      }, function (error) {
+        // 对响应错误做点什么
+        return Promise.reject(error);
+      });
+      let dddd = {
+
+        anNumber: '5',
+        anPassWord: '5'
+
+      }
+      let data = this.param(dddd)
+      console.log("data")
+      console.log(data)
+      http.post(`/login-check`, this.param(dddd), {headers: {'Content-Type': 'application/x-www-form-urlencoded'}}).then(response => {
+        console.log("login-check")
+        console.log(response.data)
+      })
+      this.query()
+
+      /* this.listLoading = true
+        this.$axios.post('http://192.168.43.108:8099/Staff/query').then(response => {
+          let l=Array.prototype.slice.call(response.data);
+          console.log(l)
+          console.log(response.data)
+          console.log("特么的data:"+l)
+          this.list = response.data
+          console.log("list:"+this.list.length)
+          this.total = 1
+          console.log("total:"+this.total)
+          setTimeout(() => {
+            this.listLoading = false
+          }, 1.5 * 1000)
+        })*/
+    },
+    methods: {
+      param(data) {
+        let url = ""
+        for (let k in data) {
+          let value = data[k] != undefined ? data[k] : ""
+          url += `&${k}=${encodeURIComponent(value)}`
+        }
+        return url ? url.substring(1) : "";
+      }
+      ,
+      query() {
+        this.$axios.post('http://192.168.43.27:8080/Post/query').then(response => {
+          console.log(response.data)
+          this.calendarTypeOptions = response.data
+          this.getList(response.data)
+        })
+      },
+      getList(posts) {
+        console.log(posts)
+        this.listLoading = true
+        fetchList(this.listQuery).then(response => {
+          this.$axios.post('http://192.168.43.27:8080/Staff/query').then(response => {
+            console.log(response.data)
+            for (t in response.data) {
+              var t = t
+              for (tt in posts) {
+                var tt = tt
+                console.log('rd')
+                console.log(response.data[t])
+                console.log('co')
+                console.log(posts)
+                if (response.data[t].postId == posts[tt].postid) {
+                  response.data[t].postname = posts[tt].postname
+                }
+              }
+            }
+            console.log(response.data)
+            this.list = response.data
+          })
+          // this.list = response.data.items
+          console.log(response.data.items)
+          this.total = 1
+          console.log('total:' + this.total)
+          // Just to simulate the time of the request
+          setTimeout(() => {
+            this.listLoading = false
+          }, 1.5 * 1000)
+        })
+      },
+      handleFilter() {
+        this.listQuery.page = 1
+        this.getList()
+      },
+      handleModifyStatus(row, status) {
+        console.log(row)
+        this.$axios.get('http://192.168.43.27:8080/Staff/update', {params: row}).then(response => {
+          this.$message({
+            message: '修改成功',
+            type: 'success'
+          })
+        })
+
+        row.state = status
+      },
+      sortChange(data) {
+        const {prop, order} = data
+        if (prop === 'id') {
+          this.sortByID(order)
+        }
+      },
+      sortByID(order) {
+        if (order === 'ascending') {
+          this.listQuery.sort = '+id'
+        } else {
+          this.listQuery.sort = '-id'
+        }
+        this.handleFilter()
+      },
+      resetTemp() {
+        this.temp = {
+          staffid: undefined,
+          postId: undefined,
+          staffName: '',
+          idcard: '',
+          state: 'published'
+        }
+      },
+      handleCreate() {
+        this.resetTemp()
+        this.dialogStatus = 'create'
+        this.dialogFormVisible = true
+        this.$nextTick(() => {
+          this.$refs['dataForm'].clearValidate()
+        })
+      },
+      createData() {
+        this.$refs['dataForm'].validate((valid) => {
+          if (valid) {
+            let tempData = Object.assign({}, this.temp)
+            this.temp.id = parseInt(Math.random() * 100) + 1024 // mock a id
+            this.temp.author = 'vue-element-admin'
+            createArticle(this.temp).then(() => {
+              this.list.unshift(this.temp)
+              this.dialogFormVisible = false
+              this.$notify({
+                title: 'Success',
+                message: 'Created Successfully',
+                type: 'success',
+                duration: 2000
+              })
+            })
+            this.$axios.get('http://192.168.43.27:8080/Staff/add', {params: tempData}).then(response => {
+              this.query()
+            })
+          }
+        })
+      },
+      handleUpdate(row) {
+        this.temp = Object.assign({}, row) // copy obj
+        console.log('temp')
+        console.log(this.temp)
+        this.temp.timestamp = new Date(this.temp.timestamp)
+        this.dialogStatus = 'update'
+        this.dialogFormVisible = true
+        this.$nextTick(() => {
+          this.$refs['dataForm'].clearValidate()
+        })
+      },
+      updateData() {
+
+        this.$refs['dataForm'].validate((valid) => {
+          console.log(valid)
+          if (valid) {
+            const tempData = Object.assign({}, this.temp)
+            console.log(tempData)
+            tempData.timestamp = +new Date(tempData.timestamp) // change Thu Nov 30 2017 16:41:05 GMT+0800 (CST) to 1512031311464
+            updateArticle(tempData).then(() => {
+              const index = this.list.findIndex(v => v.id === this.temp.id)
+              this.list.splice(index, 1, this.temp)
+              this.dialogFormVisible = false
+              this.$notify({
+                title: 'Success',
+                message: 'Update Successfully',
+                type: 'success',
+                duration: 2000
+              })
+            })
+            this.$axios.get('http://192.168.43.27:8080/Staff/update', {params: tempData}).then(response => {
+              this.query()
+            })
+          }
+        })
+
+      },
+      handleDelete(row, index) {
+        this.$notify({
+          title: 'Success',
+          message: 'Delete Successfully',
+          type: 'success',
+          duration: 2000
+        })
+        this.list.splice(index, 1)
+      },
+      handleFetchPv(pv) {
+        fetchPv(pv).then(response => {
+          this.pvData = response.data.pvData
+          this.dialogPvVisible = true
+        })
+      },
+      handleDownload() {
+        this.downloadLoading = true
+        import('@/vendor/Export2Excel').then(excel => {
+          const tHeader = ['timestamp', 'title', 'type', 'importance', 'status']
+          const filterVal = ['timestamp', 'title', 'type', 'importance', 'status']
+          const data = this.formatJson(filterVal)
+          excel.export_json_to_excel({
+            header: tHeader,
+            data,
+            filename: 'table-list'
+          })
+          this.downloadLoading = false
+        })
+      },
+      formatJson(filterVal) {
+        return this.list.map(v => filterVal.map(j => {
+          if (j === 'timestamp') {
+            return parseTime(v[j])
+          } else {
+            return v[j]
+          }
+        }))
+      },
+      getSortClass: function (key) {
+        const sort = this.listQuery.sort
+        return sort === `+${key}` ? 'ascending' : 'descending'
+      }
+    }
+  }
+</script>
Index: src/views/table/staff-table.vue
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/views/table/staff-table.vue	(date 1598577633381)
+++ src/views/table/staff-table.vue	(date 1598577633381)
@@ -0,0 +1,495 @@
+<template>
+  <div class="app-container">
+    <div class="filter-container">
+      <el-input
+        v-model="listQuery.title"
+        placeholder="Title"
+        style="width: 200px;"
+        class="filter-item"
+        @keyup.enter.native="handleFilter"
+      />
+      <el-select v-model="listQuery.importance" placeholder="Imp" clearable style="width: 90px" class="filter-item">
+        <el-option v-for="item in importanceOptions" :key="item" :label="item" :value="item"/>
+      </el-select>
+      <el-select v-model="listQuery.type" placeholder="Type" clearable class="filter-item" style="width: 130px">
+        <el-option
+          v-for="item in calendarTypeOptions"
+          :key="item.key"
+          :label="item.display_name+'('+item.key+')'"
+          :value="item.key"
+        />
+      </el-select>
+      <el-select v-model="listQuery.sort" style="width: 140px" class="filter-item" @change="handleFilter">
+        <el-option v-for="item in sortOptions" :key="item.key" :label="item.label" :value="item.key"/>
+      </el-select>
+      <el-button v-waves class="filter-item" type="primary" icon="el-icon-search" @click="handleFilter">
+        Search
+      </el-button>
+      <el-button
+        class="filter-item"
+        style="margin-left: 10px;"
+        type="primary"
+        icon="el-icon-edit"
+        @click="handleCreate"
+      >
+        Add
+      </el-button>
+      <el-button
+        v-waves
+        :loading="downloadLoading"
+        class="filter-item"
+        type="primary"
+        icon="el-icon-download"
+        @click="handleDownload"
+      >
+        Export
+      </el-button>
+      <el-checkbox v-model="showReviewer" class="filter-item" style="margin-left:15px;" @change="tableKey=tableKey+1">
+        reviewer
+      </el-checkbox>
+    </div>
+
+    <el-table
+      :key="tableKey"
+      v-loading="listLoading"
+      :data="list"
+      border
+      fit
+      highlight-current-row
+      style="width: 100%;"
+      @sort-change="sortChange"
+    >
+      <el-table-column label="staffID" width="150px" align="center" sortable="custom" :class-name="getSortClass('id')">
+        <template slot-scope="{row}">
+          <span>{{ row.staffid }}</span>
+        </template>
+      </el-table-column>
+      <el-table-column label="职位" prop="postId" align="center" width="80">
+        <template slot-scope="{row}">
+          <span>{{ row.postName }}</span>
+        </template>
+      </el-table-column>
+      <el-table-column label="员工姓名" min-width="150px">
+        <template slot-scope="{row}">
+          <span>{{ row.staffName }}</span>
+        </template>
+      </el-table-column>
+      <el-table-column label="身份证号" min-width="150px">
+        <template slot-scope="{row}">
+          <span>{{ row.idcard }}</span>
+        </template>
+      </el-table-column>
+      <el-table-column label="工作状态" class-name="status-col" width="100">
+        <template slot-scope="{row}">
+          <el-tag :type="row.state | statusFilter">
+            {{ row.state==1?'在职':'离职' }}
+          </el-tag>
+        </template>
+      </el-table-column>
+      <el-table-column label="Actions" align="center" width="330" class-name="small-padding fixed-width">
+        <template slot-scope="{row,$index}">
+          <el-button type="primary" size="mini" @click="handleUpdate(row)">
+            修改信息
+          </el-button>
+          <el-button
+            v-if="row.state=='1'"
+            size="mini"
+            type="success"
+            @click="handleModifyStatus(row,'2')"
+          >
+            离职
+          </el-button>
+          <el-button v-if="row.state=='2'" size="mini" @click="handleModifyStatus(row,'1')">
+            在职
+          </el-button>
+        </template>
+      </el-table-column>
+    </el-table>
+    <pagination
+      v-show="total>0"
+      :total="total"
+      :page.sync="listQuery.page"
+      :limit.sync="listQuery.limit"
+      @pagination="getList"
+    />
+    <el-dialog :title="textMap[dialogStatus]" :visible.sync="dialogFormVisible">
+      <el-form
+        ref="dataForm"
+        :rules="rules"
+        :model="temp"
+        label-position="left"
+        label-width="90px"
+        style="width: 400px; margin-left:50px;"
+      >
+        <el-form-item label="职能" prop="postId">
+          <el-select v-model="temp.postId" class="filter-item" placeholder="Please select">
+            <el-option
+              v-for="item in calendarTypeOptions"
+              :key="item.postid"
+              :label="item.postname"
+              :value="item.postid"
+            />
+          </el-select>
+        </el-form-item>
+        <el-form-item label="员工" prop="staffName">
+          <el-input v-model="temp.staffName" :autosize="{ minRows: 2, maxRows: 4}" placeholder="Please input"/>
+        </el-form-item>
+        <el-form-item label="身份证号" prop="idcard">
+          <el-input v-model="temp.idcard" placeholder="Please input"/>
+        </el-form-item>
+      </el-form>
+      <div slot="footer" class="dialog-footer">
+        <el-button @click="dialogFormVisible = false">
+          Cancel
+        </el-button>
+        <el-button type="primary" @click="dialogStatus==='create'?createData():updateData()">
+          Confirm
+        </el-button>
+      </div>
+    </el-dialog>
+  </div>
+</template>
+
+<script>
+  import {querypost, fetchList, fetchPv, createArticle, updateArticle} from '@/api/article'
+  import waves from '@/directive/waves' // waves directive
+  import {parseTime} from '@/utils'
+  import Pagination from '@/components/Pagination'
+  import {adminlogin} from "../../api/article"; // secondary package based on el-pagination
+
+  const calendarTypeOptions = [{'postid': 1, 'postname': 'ls'}]
+
+  // arr to obj, such as { CN : "China", US : "USA" }
+  const calendarTypeKeyValue = calendarTypeOptions.reduce((acc, cur) => {
+    acc[cur.postid] = cur.postname
+    return acc
+  }, {})
+
+  export default {
+    name: 'ComplexTable',
+    components: {Pagination},
+    directives: {waves},
+    filters: {
+      statusFilter(status) {
+        const statusMap = {
+          published: 'success',
+          draft: 'info',
+          deleted: 'danger'
+        }
+        return statusMap[status]
+      },
+      typeFilter(type) {
+        return calendarTypeKeyValue[type]
+      }
+    },
+    data() {
+      return {
+        tableKey: 0,
+        list: null,
+        total: 0,
+        listLoading: true,
+        listQuery: {
+          page: 1,
+          limit: 20,
+          importance: undefined,
+          title: undefined,
+          title2: undefined,
+          idcard: undefined,
+          staffName: undefined,
+          postId: undefined,
+          sort: '+staffid'
+        },
+        importanceOptions: [1, 2, 3],
+        calendarTypeOptions,
+        sortOptions: [{label: 'ID Ascending', key: '+id'}, {label: 'ID Descending', key: '-id'}],
+        statusOptions: ['published', 'draft', 'deleted'],
+        showReviewer: false,
+        temp: {
+          staffid: undefined,
+          postId: undefined,
+          staffName: '',
+          idcard: '',
+          type: undefined,
+          state: 'published'
+        },
+        staff: {
+          staffid: undefined,
+          postId: undefined,
+          staffName: '',
+          idcard: '',
+          type: undefined,
+          state: 'published'
+        },
+        dialogFormVisible: false,
+        dialogStatus: '',
+        textMap: {
+          update: 'Edit',
+          create: 'Create'
+        },
+        dialogPvVisible: false,
+        pvData: [],
+        rules: {
+          postId: [{required: true, message: '职位是需要填写的', trigger: 'change'}],
+          timestamp: [{type: 'date', required: true, message: 'timestamp is required', trigger: 'change'}],
+          staffName: [{required: true, message: '员工是需要填写的', trigger: 'blur'}],
+          idcard: [{required: true, message: '身份证是需要填写的', trigger: 'blur'}]
+        },
+        downloadLoading: false
+      }
+    },
+    created(url, config) {
+      let http = this.$axios.create({
+        // 访问的根路径
+        baseURL: 'http://192.168.43.27:8080/',
+        // 请求超时时间
+        timeout: 5000,
+        // 是否携带凭证
+        withCredentials: true,
+        responseType: "json"
+      })
+      // 添加请求拦截器
+      http.interceptors.request.use(function (config) {
+        // 在发送请求之前做些什么
+        return config;
+      }, function (error) {
+        // 对请求错误做些什么
+        return Promise.reject(error);
+      });
+
+// 添加响应拦截器
+      http.interceptors.response.use(function (response) {
+        // 对响应数据做点什么
+        return response.data;
+      }, function (error) {
+        // 对响应错误做点什么
+        return Promise.reject(error);
+      });
+      let dddd = {
+
+        anNumber: '5',
+        anPassWord: '5'
+
+      }
+      let data = this.param(dddd)
+      console.log("data")
+      console.log(data)
+      http.post(`/login-check`, this.param(dddd), {headers: {'Content-Type': 'application/x-www-form-urlencoded'}}).then(response => {
+        console.log("login-check")
+        console.log(response.data)
+      })
+      this.query()
+
+      /* this.listLoading = true
+        this.$axios.post('http://192.168.43.108:8099/Staff/query').then(response => {
+          let l=Array.prototype.slice.call(response.data);
+          console.log(l)
+          console.log(response.data)
+          console.log("特么的data:"+l)
+          this.list = response.data
+          console.log("list:"+this.list.length)
+          this.total = 1
+          console.log("total:"+this.total)
+          setTimeout(() => {
+            this.listLoading = false
+          }, 1.5 * 1000)
+        })*/
+    },
+    methods: {
+      param(data) {
+        let url = ""
+        for (let k in data) {
+          let value = data[k] != undefined ? data[k] : ""
+          url += `&${k}=${encodeURIComponent(value)}`
+        }
+        return url ? url.substring(1) : "";
+      }
+      ,
+      query() {
+        this.$axios.post('http://192.168.43.27:8080/Post/query').then(response => {
+          console.log(response.data)
+          this.calendarTypeOptions = response.data
+          this.getList(response.data)
+        })
+      },
+      getList(posts) {
+        console.log(posts)
+        this.listLoading = true
+        fetchList(this.listQuery).then(response => {
+          this.$axios.post('http://192.168.43.27:8080/Staff/query').then(response => {
+            console.log(response.data)
+            for (t in response.data) {
+              var t = t
+              for (tt in posts) {
+                var tt = tt
+                console.log('rd')
+                console.log(response.data[t])
+                console.log('co')
+                console.log(posts)
+                if (response.data[t].postId == posts[tt].postid) {
+                  response.data[t].postname = posts[tt].postname
+                }
+              }
+            }
+            console.log(response.data)
+            this.list = response.data
+          })
+          // this.list = response.data.items
+          console.log(response.data.items)
+          this.total = 1
+          console.log('total:' + this.total)
+          // Just to simulate the time of the request
+          setTimeout(() => {
+            this.listLoading = false
+          }, 1.5 * 1000)
+        })
+      },
+      handleFilter() {
+        this.listQuery.page = 1
+        this.getList()
+      },
+      handleModifyStatus(row, status) {
+        console.log(row)
+        this.$axios.get('http://192.168.43.27:8080/Staff/update', {params: row}).then(response => {
+          this.$message({
+            message: '修改成功',
+            type: 'success'
+          })
+        })
+
+        row.state = status
+      },
+      sortChange(data) {
+        const {prop, order} = data
+        if (prop === 'id') {
+          this.sortByID(order)
+        }
+      },
+      sortByID(order) {
+        if (order === 'ascending') {
+          this.listQuery.sort = '+id'
+        } else {
+          this.listQuery.sort = '-id'
+        }
+        this.handleFilter()
+      },
+      resetTemp() {
+        this.temp = {
+          staffid: undefined,
+          postId: undefined,
+          staffName: '',
+          idcard: '',
+          state: 'published'
+        }
+      },
+      handleCreate() {
+        this.resetTemp()
+        this.dialogStatus = 'create'
+        this.dialogFormVisible = true
+        this.$nextTick(() => {
+          this.$refs['dataForm'].clearValidate()
+        })
+      },
+      createData() {
+        this.$refs['dataForm'].validate((valid) => {
+          if (valid) {
+            let tempData = Object.assign({}, this.temp)
+            this.temp.id = parseInt(Math.random() * 100) + 1024 // mock a id
+            this.temp.author = 'vue-element-admin'
+            createArticle(this.temp).then(() => {
+              this.list.unshift(this.temp)
+              this.dialogFormVisible = false
+              this.$notify({
+                title: 'Success',
+                message: 'Created Successfully',
+                type: 'success',
+                duration: 2000
+              })
+            })
+            this.$axios.get('http://192.168.43.27:8080/Staff/add', {params: tempData}).then(response => {
+              this.query()
+            })
+          }
+        })
+      },
+      handleUpdate(row) {
+        this.temp = Object.assign({}, row) // copy obj
+        console.log('temp')
+        console.log(this.temp)
+        this.temp.timestamp = new Date(this.temp.timestamp)
+        this.dialogStatus = 'update'
+        this.dialogFormVisible = true
+        this.$nextTick(() => {
+          this.$refs['dataForm'].clearValidate()
+        })
+      },
+      updateData() {
+
+        this.$refs['dataForm'].validate((valid) => {
+          console.log(valid)
+          if (valid) {
+            const tempData = Object.assign({}, this.temp)
+            console.log(tempData)
+            tempData.timestamp = +new Date(tempData.timestamp) // change Thu Nov 30 2017 16:41:05 GMT+0800 (CST) to 1512031311464
+            updateArticle(tempData).then(() => {
+              const index = this.list.findIndex(v => v.id === this.temp.id)
+              this.list.splice(index, 1, this.temp)
+              this.dialogFormVisible = false
+              this.$notify({
+                title: 'Success',
+                message: 'Update Successfully',
+                type: 'success',
+                duration: 2000
+              })
+            })
+            this.$axios.get('http://192.168.43.27:8080/Staff/update', {params: tempData}).then(response => {
+              this.query()
+            })
+          }
+        })
+
+      },
+      handleDelete(row, index) {
+        this.$notify({
+          title: 'Success',
+          message: 'Delete Successfully',
+          type: 'success',
+          duration: 2000
+        })
+        this.list.splice(index, 1)
+      },
+      handleFetchPv(pv) {
+        fetchPv(pv).then(response => {
+          this.pvData = response.data.pvData
+          this.dialogPvVisible = true
+        })
+      },
+      handleDownload() {
+        this.downloadLoading = true
+        import('@/vendor/Export2Excel').then(excel => {
+          const tHeader = ['timestamp', 'title', 'type', 'importance', 'status']
+          const filterVal = ['timestamp', 'title', 'type', 'importance', 'status']
+          const data = this.formatJson(filterVal)
+          excel.export_json_to_excel({
+            header: tHeader,
+            data,
+            filename: 'table-list'
+          })
+          this.downloadLoading = false
+        })
+      },
+      formatJson(filterVal) {
+        return this.list.map(v => filterVal.map(j => {
+          if (j === 'timestamp') {
+            return parseTime(v[j])
+          } else {
+            return v[j]
+          }
+        }))
+      },
+      getSortClass: function (key) {
+        const sort = this.listQuery.sort
+        return sort === `+${key}` ? 'ascending' : 'descending'
+      }
+    }
+  }
+</script>
Index: src/api/article.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/api/article.js	(date 1598326675000)
+++ src/api/article.js	(date 1598577633008)
@@ -8,6 +8,14 @@
   })
 }
 
+export function adminlogin() {
+  return request({
+    url: 'http://192.168.43.108:8099/login-check',
+    method: 'get',
+    params: {anNumber: '5', anPassWord: '5'}
+  })
+}
+
 export function fetchArticle(id) {
   return request({
     url: '/vue-element-admin/article/detail',
Index: src/router/modules/table.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/router/modules/table.js	(date 1598326675000)
+++ src/router/modules/table.js	(date 1598577633079)
@@ -5,7 +5,7 @@
 const tableRouter = {
   path: '/table',
   component: Layout,
-  redirect: '/table/complex-table',
+  redirect: '/table/staff-table',
   name: 'Table',
   meta: {
     title: 'Table',
@@ -31,6 +31,12 @@
       meta: { title: 'Inline Edit' }
     },
     {
+      path: 'staff-table',
+      component: () => import('@/views/table/staff-table'),
+      name: 'StaffTable',
+      meta: {title: 'Staff Table'}
+    },
+    {
       path: 'complex-table',
       component: () => import('@/views/table/complex-table'),
       name: 'ComplexTable',
Index: src/utils/request.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/utils/request.js	(date 1598326675000)
+++ src/utils/request.js	(date 1598577632860)
@@ -6,8 +6,9 @@
 // create an axios instance
 const service = axios.create({
   baseURL: process.env.VUE_APP_BASE_API, // url = base url + request url
-  // withCredentials: true, // send cookies when cross-domain requests
-  timeout: 5000 // request timeout
+  withCredentials: true, // send cookies when cross-domain requests
+  timeout: 2000, // request timeout
+  responseType: JSON
 })
 
 // request interceptor
Index: src/views/excel/select-excel.vue
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/views/excel/select-excel.vue	(date 1598326675000)
+++ src/views/excel/select-excel.vue	(date 1598441891740)
Index: plop-templates/utils.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- plop-templates/utils.js	(date 1598326675000)
+++ plop-templates/utils.js	(date 1598499705729)
Index: src/views/excel/merge-header.vue
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/views/excel/merge-header.vue	(date 1598326675000)
+++ src/views/excel/merge-header.vue	(date 1598442112143)
Index: src/views/table/complex-table.vue
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/views/table/complex-table.vue	(date 1598326675000)
+++ src/views/table/complex-table.vue	(date 1598577633607)
@@ -109,8 +109,8 @@
         <el-form-item label="Date" prop="timestamp">
           <el-date-picker v-model="temp.timestamp" type="datetime" placeholder="Please pick a date" />
         </el-form-item>
-        <el-form-item label="Title" prop="title">
-          <el-input v-model="temp.title" />
+        <el-form-item label="Title" prop="title2">
+          <el-input v-model="temp.title2"/>
         </el-form-item>
         <el-form-item label="Status">
           <el-select v-model="temp.status" class="filter-item" placeholder="Please select">
@@ -147,7 +147,7 @@
 </template>
 
 <script>
-import { fetchList, fetchPv, createArticle, updateArticle } from '@/api/article'
+  import {querypost, fetchList, fetchPv, createArticle, updateArticle} from '@/api/article'
 import waves from '@/directive/waves' // waves directive
 import { parseTime } from '@/utils'
 import Pagination from '@/components/Pagination' // secondary package based on el-pagination
@@ -207,6 +207,7 @@
         remark: '',
         timestamp: new Date(),
         title: '',
+        title2: '222222222222222',
         type: '',
         status: 'published'
       },
@@ -221,21 +222,37 @@
       rules: {
         type: [{ required: true, message: 'type is required', trigger: 'change' }],
         timestamp: [{ type: 'date', required: true, message: 'timestamp is required', trigger: 'change' }],
-        title: [{ required: true, message: 'title is required', trigger: 'blur' }]
+        title: [{required: true, message: 'title is required', trigger: 'blur'}],
+        title2: [{required: true, message: 'title is required', trigger: 'blur'}]
       },
       downloadLoading: false
     }
   },
   created() {
     this.getList()
+    /* this.listLoading = true
+    this.$axios.post('http://192.168.43.108:8099/Staff/query').then(response => {
+      let l=Array.prototype.slice.call(response.data);
+      console.log(l)
+      console.log(response.data)
+      console.log("特么的data:"+l)
+      this.list = response.data
+      console.log("list:"+this.list.length)
+      this.total = 1
+      console.log("total:"+this.total)
+      setTimeout(() => {
+        this.listLoading = false
+      }, 1.5 * 1000)
+    })*/
   },
   methods: {
     getList() {
       this.listLoading = true
       fetchList(this.listQuery).then(response => {
         this.list = response.data.items
-        this.total = response.data.total
-
+        console.log(response.data.items)
+        this.total = 1
+        console.log('total:' + this.total)
         // Just to simulate the time of the request
         setTimeout(() => {
           this.listLoading = false
Index: src/main.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main.js	(date 1598326675000)
+++ src/main.js	(date 1598577633205)
@@ -13,12 +13,14 @@
 import App from './App'
 import store from './store'
 import router from './router'
-
+import axios from 'axios'
 import './icons' // icon
 import './permission' // permission control
 import './utils/error-log' // error log
 
 import * as filters from './filters' // global filters
+axios.defaults.withCredentials = true;
+Vue.prototype.$axios = axios
 
 /**
  * If you don't want to use mock-server
@@ -49,5 +51,6 @@
   el: '#app',
   router,
   store,
-  render: h => h(App)
+  render: h => h(App),
+  axios
 })
Index: .env.development
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .env.development	(date 1598326675000)
+++ .env.development	(date 1598356729113)
Index: mock/user.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- mock/user.js	(date 1598326675000)
+++ mock/user.js	(date 1598352943372)
@@ -1,4 +1,5 @@
-
+//设置权限对应的角色
+//admin是权限，token是角色
 const tokens = {
   admin: {
     token: 'admin-token'
@@ -7,7 +8,8 @@
     token: 'editor-token'
   }
 }
-
+//设置角色对应的账号
+//admin-token 是角色，admin是账号
 const users = {
   'admin-token': {
     roles: ['admin'],
Index: src/router/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/router/index.js	(date 1598326675000)
+++ src/router/index.js	(date 1598353515567)
@@ -190,7 +190,6 @@
   chartsRouter,
   nestedRouter,
   tableRouter,
-
   {
     path: '/example',
     component: Layout,
Index: package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- package.json	(date 1598326675000)
+++ package.json	(date 1598357899300)
@@ -15,7 +15,7 @@
     "test:ci": "npm run lint && npm run test:unit"
   },
   "dependencies": {
-    "axios": "0.18.1",
+    "axios": "^0.18.1",
     "clipboard": "2.0.4",
     "codemirror": "5.45.0",
     "core-js": "3.6.5",
